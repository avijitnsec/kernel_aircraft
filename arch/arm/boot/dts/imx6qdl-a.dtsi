/*
 * Copyright 2015 Boundary Devices, Inc.
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;

        iomuxc_imx6q_a: iomuxc-imx6q-agrp {
                status = "okay";
        };
};

&iomuxc_imx6q_a {
	pinctrl_audmux: audmuxgrp {
		fsl,pins = <
			MX6QDL_PAD_CSI0_DAT7__AUD3_RXD		0x130b0
			MX6QDL_PAD_CSI0_DAT4__AUD3_TXC		0x130b0
			MX6QDL_PAD_CSI0_DAT5__AUD3_TXD		0x110b0
			MX6QDL_PAD_CSI0_DAT6__AUD3_TXFS		0x130b0
		>;
	};

	pinctrl_ecspi1: ecspi1grp {
		fsl,pins = <
			MX6QDL_PAD_EIM_D17__ECSPI1_MISO		0x100b1
			MX6QDL_PAD_EIM_D18__ECSPI1_MOSI		0x100b1
			MX6QDL_PAD_EIM_D16__ECSPI1_SCLK		0x000b1
#define GP_ECSPI1_NOR_CS	<&gpio3 19 GPIO_ACTIVE_LOW>
			MX6QDL_PAD_EIM_D19__GPIO3_IO19		0x0b0b1
		>;
	};

	pinctrl_enet: enetgrp {
		fsl,pins = <
			MX6QDL_PAD_ENET_MDIO__ENET_MDIO		0x1b0b0
			MX6QDL_PAD_ENET_MDC__ENET_MDC		0x1b0b0
			MX6QDL_PAD_RGMII_TXC__RGMII_TXC		0x100b0
			MX6QDL_PAD_RGMII_TD0__RGMII_TD0		0x100b0
			MX6QDL_PAD_RGMII_TD1__RGMII_TD1		0x100b0
			MX6QDL_PAD_RGMII_TD2__RGMII_TD2		0x100b0
			MX6QDL_PAD_RGMII_TD3__RGMII_TD3		0x100b0
			MX6QDL_PAD_RGMII_TX_CTL__RGMII_TX_CTL	0x100b0
			MX6QDL_PAD_ENET_REF_CLK__ENET_TX_CLK	0x100b0
			MX6QDL_PAD_RGMII_RXC__RGMII_RXC		0x1b0b0
			MX6QDL_PAD_RGMII_RD0__RGMII_RD0		0x1b0b0
			MX6QDL_PAD_RGMII_RD1__RGMII_RD1		0x1b0b0
			MX6QDL_PAD_RGMII_RD2__RGMII_RD2		0x1b0b0
			MX6QDL_PAD_RGMII_RD3__RGMII_RD3		0x1b0b0
			MX6QDL_PAD_RGMII_RX_CTL__RGMII_RX_CTL	0x1b0b0
#define GP_ENET_PHY_RESET	<&gpio1 27 GPIO_ACTIVE_LOW>
			MX6QDL_PAD_ENET_RXD0__GPIO1_IO27	0x030b0
#define GPIRQ_ENET_PHY		<&gpio1 28 IRQ_TYPE_LEVEL_LOW>
			MX6QDL_PAD_ENET_TX_EN__GPIO1_IO28	0x1b0b0
#define GPIRQ_ENET		<&gpio1 6 IRQ_TYPE_LEVEL_HIGH>
			MX6QDL_PAD_GPIO_6__ENET_IRQ		0x000b1
		>;
	};

	pinctrl_flexcan1: flexcan1grp {
		fsl,pins = <
			MX6QDL_PAD_KEY_COL2__FLEXCAN1_TX	0x1b0b0
			MX6QDL_PAD_KEY_ROW2__FLEXCAN1_RX	0x1b0b0
#define GP_FLEXCAN1_STANDBY	<&gpio1 2 GPIO_ACTIVE_HIGH>
			MX6QDL_PAD_GPIO_2__GPIO1_IO02		0x0b0b0
		>;
	};

	pinctrl_gpio_keys: gpio-keysgrp {
		fsl,pins = <
#define GP_S0_FACTORY_RESET	<&gpio4 6 GPIO_ACTIVE_LOW>
			MX6QDL_PAD_KEY_COL0__GPIO4_IO06		0x1b0b0
#define GP_J57_INPUT		<&gpio6 6 GPIO_ACTIVE_LOW>
			MX6QDL_PAD_EIM_A23__GPIO6_IO06		0x1b0b0
#define GP_S1_LOOPBACK		<&gpio4 5 GPIO_ACTIVE_LOW>
			MX6QDL_PAD_GPIO_19__GPIO4_IO05		0x1b0b0
#define GP_S1_DIAG1		<&gpio4 7 GPIO_ACTIVE_LOW>
			MX6QDL_PAD_KEY_ROW0__GPIO4_IO07		0x1b0b0
#define GP_S1_DIAG2		<&gpio4 8 GPIO_ACTIVE_LOW>
			MX6QDL_PAD_KEY_COL1__GPIO4_IO08		0x1b0b0
#define GP_S1_INPUT		<&gpio2 27 GPIO_ACTIVE_LOW>
			MX6QDL_PAD_EIM_LBA__GPIO2_IO27          0x1b0b0
		>;
	};

	pinctrl_hog: hoggrp {
		fsl,pins = <
			MX6QDL_PAD_EIM_CS1__GPIO2_IO24		0x1b0b0		/* Spare */
			MX6QDL_PAD_NANDF_CS1__GPIO6_IO14	0x1b0b0		/* Spare */
			MX6QDL_PAD_EIM_A19__GPIO2_IO19		0x130b0		/* Led0 */
			MX6QDL_PAD_EIM_A18__GPIO2_IO20		0x130b0		/* Led1 */
			MX6QDL_PAD_EIM_A16__GPIO2_IO22		0x130b0		/* LedRed */
			MX6QDL_PAD_EIM_A17__GPIO2_IO21		0x130b0		/* Led2 */
			MX6QDL_PAD_GPIO_3__GPIO1_IO03		0x1b0b0		/* rxact */
			MX6QDL_PAD_GPIO_4__GPIO1_IO04		0x1b0b0		/* txact */
		>;
	};

	pinctrl_i2c2: i2c2grp {
		fsl,pins = <
			MX6QDL_PAD_KEY_COL3__I2C2_SCL		0x4001b8b1
			MX6QDL_PAD_KEY_ROW3__I2C2_SDA		0x4001b8b1
		>;
	};

	pinctrl_i2c2_1: i2c2_1grp {
		fsl,pins = <
#define GP_I2C2_SCL	<&gpio4 12 GPIO_ACTIVE_HIGH>
			MX6QDL_PAD_KEY_COL3__GPIO4_IO12		0x4001b8b1
#define GP_I2C2_SDA	<&gpio4 13 GPIO_ACTIVE_HIGH>
			MX6QDL_PAD_KEY_ROW3__GPIO4_IO13		0x4001b8b1
		>;
	};

	pinctrl_i2c2_rv4162: i2c2-rv4162grp {
		fsl,pins = <
#define GPIRQ_RTC_RV4162	<&gpio4 15 IRQ_TYPE_LEVEL_LOW>
			MX6QDL_PAD_KEY_ROW4__GPIO4_IO15		0x1b0b0
		>;
	};

	pinctrl_reg_usbotg_vbus: reg-usbotg-vbusgrp {
		fsl,pins = <
#define GP_REG_USBOTG	<&gpio3 22 GPIO_ACTIVE_HIGH>
			MX6QDL_PAD_EIM_D22__GPIO3_IO22		0x030b0
		>;
	};

	pinctrl_uart1: uart1grp {
		fsl,pins = <
			MX6QDL_PAD_SD3_DAT7__UART1_TX_DATA	0x1b0b1
			MX6QDL_PAD_SD3_DAT6__UART1_RX_DATA	0x1b0b1
		>;
	};

	pinctrl_uart2: uart2grp {
		fsl,pins = <
			MX6QDL_PAD_EIM_D26__UART2_TX_DATA	0x1b0b1
			MX6QDL_PAD_EIM_D27__UART2_RX_DATA	0x1b0b1
		>;
	};

	pinctrl_uart3: uart3grp {
		fsl,pins = <
			MX6QDL_PAD_EIM_D25__UART3_RX_DATA	0x1b0b1
			MX6QDL_PAD_EIM_D24__UART3_TX_DATA	0x1b0b1
#define GP_UART3_RX_EN	<&gpio2 16 GPIO_ACTIVE_HIGH>
			MX6QDL_PAD_EIM_A22__GPIO2_IO16		0x030b0		/* RS485 RX Enable: pull down */
#define GP_UART3_TX_EN	<&gpio2 17 GPIO_ACTIVE_HIGH>
			MX6QDL_PAD_EIM_A21__GPIO2_IO17		0x030b0		/* RS485 DEN: pull down */
#define GP_UART3_RS485_EN <&gpio2 18 GPIO_ACTIVE_HIGH>
			MX6QDL_PAD_EIM_A20__GPIO2_IO18		0x030b0		/* RS485/!RS232 Select: pull down (rs232) */
#define GP_UART3_AON	<&gpio7 13 GPIO_ACTIVE_HIGH>
			MX6QDL_PAD_GPIO_18__GPIO7_IO13		0x030b0		/* ON: pull down */
		>;
	};

	pinctrl_uart4: uart4grp {
		fsl,pins = <
			MX6QDL_PAD_CSI0_DAT12__UART4_TX_DATA	0x1b0b1
			MX6QDL_PAD_CSI0_DAT13__UART4_RX_DATA	0x1b0b1
		>;
	};

	pinctrl_usbh1: usbh1grp {
		fsl,pins = <
#define GP_USBH1_HUB_RESET	<&gpio7 12 GPIO_ACTIVE_LOW>
			MX6QDL_PAD_GPIO_17__GPIO7_IO12		0x0b0b0
#define GP_AX88772A_RESET	<&gpio2 25 GPIO_ACTIVE_LOW>
			MX6QDL_PAD_EIM_OE__GPIO2_IO25		0x0b0b0
#define GP_MODEM_RESET	<&gpio2 6 GPIO_ACTIVE_LOW>
			MX6QDL_PAD_NANDF_D6__GPIO2_IO06		0x0b0b0
#define GP_MODEM_OFF	<&gpio2 5 GPIO_ACTIVE_HIGH>
			MX6QDL_PAD_NANDF_D5__GPIO2_IO05		0x0b0b0
			MX6QDL_PAD_NANDF_D7__GPIO2_IO07		0x1b0b0
			MX6QDL_PAD_NANDF_WP_B__GPIO6_IO09	0x1b0b0
			MX6QDL_PAD_NANDF_RB0__GPIO6_IO10	0x1b0b0
		>;
	};

	pinctrl_usbotg: usbotggrp {
		fsl,pins = <
			MX6QDL_PAD_GPIO_1__USB_OTG_ID		0x17059
			MX6QDL_PAD_KEY_COL4__USB_OTG_OC		0x1b0b0
		>;
	};

	pinctrl_usdhc4: usdhc4grp {
		fsl,pins = <
			MX6QDL_PAD_SD4_CLK__SD4_CLK		0x10059
			MX6QDL_PAD_SD4_CMD__SD4_CMD		0x17059
			MX6QDL_PAD_SD4_DAT0__SD4_DATA0		0x17059
			MX6QDL_PAD_SD4_DAT1__SD4_DATA1		0x17059
			MX6QDL_PAD_SD4_DAT2__SD4_DATA2		0x17059
			MX6QDL_PAD_SD4_DAT3__SD4_DATA3		0x17059
			MX6QDL_PAD_SD4_DAT4__SD4_DATA4		0x17059
			MX6QDL_PAD_SD4_DAT5__SD4_DATA5		0x17059
			MX6QDL_PAD_SD4_DAT6__SD4_DATA6		0x17059
			MX6QDL_PAD_SD4_DAT7__SD4_DATA7		0x17059
#define GP_EMMC_RESET	<&gpio2 0 GPIO_ACTIVE_LOW>
			MX6QDL_PAD_NANDF_D0__GPIO2_IO00		0x1b0b0
		>;
	};
};

/ {
	aliases {
		i2c0 = &i2c2;
		mmc0 = &usdhc4;
	};

	gpio-keys {
		compatible = "gpio-keys";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_gpio_keys>;

		factory_reset {
			label = "factory reset";
			gpios = GP_S0_FACTORY_RESET;
			linux,code = <KEY_BACK>;
		};

		j57_input {
			label = "j57 input";
			gpios = GP_J57_INPUT;
			linux,code = <KEY_HOMEPAGE>;
		};

		s1_loop {
			label = "s1 loop";
			gpios = GP_S1_LOOPBACK;
			linux,code = <KEY_MENU>;
		};

		s1_diag {
			label = "s1 diag";
			gpios = GP_S1_DIAG1;
			linux,code = <KEY_SEARCH>;
			gpio-key,wakeup;
		};

		s2_diag {
			label = "s2 diag";
			gpios = GP_S1_DIAG2;
			linux,code = <KEY_VOLUMEDOWN>;
		};

		s1_input {
			label = "s1 input";
			gpios = GP_S1_INPUT;
			linux,code = <KEY_VOLUMEUP>;
		};
	};

	memory {
		reg = <0x10000000 0x40000000>;
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_1p8v: regulator@0 {
			compatible = "regulator-fixed";
			reg = <0>;
			regulator-name = "1P8V";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			regulator-always-on;
		};

		reg_2p5v: regulator@1 {
			compatible = "regulator-fixed";
			reg = <1>;
			regulator-name = "2P5V";
			regulator-min-microvolt = <2500000>;
			regulator-max-microvolt = <2500000>;
			regulator-always-on;
		};

		reg_3p3v: regulator@2 {
			compatible = "regulator-fixed";
			reg = <2>;
			regulator-name = "3P3V";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};

		reg_usbotg_vbus: regulator@3 {
			compatible = "regulator-fixed";
			reg = <3>;
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_reg_usbotg_vbus>;
			regulator-name = "usb_otg_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = GP_REG_USBOTG;
			enable-active-high;
		};
	};

	v4l2_out {
		compatible = "fsl,mxc_v4l2_output";
		status = "okay";
	};
};

&audmux {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_audmux>;
};

&can1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan1>;
	trx-stby-gpio = GP_FLEXCAN1_STANDBY;
	status = "okay";
};

&ecspi1 {
	fsl,spi-num-chipselects = <1>;
	cs-gpios = GP_ECSPI1_NOR_CS;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi1>;
	status = "okay";

	flash: m25p80@0 {
		compatible = "sst,sst25vf016b";
		spi-max-frequency = <20000000>;
		reg = <0>;
		#address-cells = <1>;
		#size-cells = <1>;
		mtd@00000000 {
			label = "U-Boot";
			reg = <0x0 0xC0000>;
		};

		mtd@000C0000 {
			label = "env";
			reg = <0xC0000 0x2000>;
		};
		mtd@000C2000 {
			label = "splash";
			reg = <0xC2000 0x13e000>;
		};
	};
};

&fec {
	interrupts-extended = GPIRQ_ENET,
			      <&gpc 0 119 IRQ_TYPE_LEVEL_HIGH>;
	phy-handle = <&ethphy>;
	phy-mode = "rgmii";
#if 0
	phy-reset-gpios = GP_ENET_PHY_RESET;
#endif
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet>;
	status = "okay";

	mdio {
		#address-cells = <0>;
		#size-cells = <1>;

		ethphy: ethernet-phy@6 {
			reg = <6>;
			interrupts-extended = GPIRQ_ENET_PHY;
		};
	};
};

&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&pinctrl_i2c2>;
	pinctrl-1 = <&pinctrl_i2c2_1>;
	scl-gpios = GP_I2C2_SCL;
	sda-gpios = GP_I2C2_SDA;
	status = "okay";

	rv4162@68 {
		compatible = "mcrystal,rv4162";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_i2c2_rv4162>;
		reg = <0x68>;
		interrupts-extended = GPIRQ_RTC_RV4162;
	};
};

&pcie {
	status = "okay";
};

&ssi1 {
	fsl,mode = "i2s-slave";
	status = "okay";
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	status = "okay";
};

&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	status = "okay";
};

&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	control-gpios = GP_UART3_RX_EN, GP_UART3_TX_EN, GP_UART3_RS485_EN, GP_UART3_AON;
#define M_RX_EN		1
#define M_TX_EN		2
#define M_RS485		4
#define M_AON		8
	off_levels = <0>;
	rxact_mask = <0>;
	rxact_levels = <0>;
	rs232_levels = <M_RX_EN>;
	rs232_txen_mask = <0>;
	rs232_txen_levels = <0>;
	rs485_levels = <0xd>;
	rs485_txen_mask = <0x3>;
	rs485_txen_levels = <M_TX_EN>;
	uart-has-rs485-half-duplex;
	rs485-mode = <1>;	/* 1 to enable */
	status = "okay";
};

&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>;
	status = "okay";
};

&usbh1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usbh1>;
	disable-over-current;
	reset-gpios = GP_USBH1_HUB_RESET, GP_AX88772A_RESET, GP_MODEM_RESET;
	status = "okay";
};

&usbotg {
	vbus-supply = <&reg_usbotg_vbus>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usbotg>;
	status = "okay";
};

&usdhc4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc4>;
	bus-width = <8>;
	non-removable;
	vqmmc-1-8-v;
	vmmc-supply = <&reg_1p8v>;
	keep-power-in-suspend;
	status = "okay";
};
